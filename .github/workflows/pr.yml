# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Pipelines for pr

on:
  pull_request:
    branches: [ "main" ]

jobs:

  parse_branch_name:
    runs-on: self-hosted
    name: Parse branch name
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Check if PR target branch is ok
        run: |
          branch_name=${GITHUB_HEAD_REF}
          echo "pr branch name: $branch_name"

          target_branch=${GITHUB_BASE_REF}
          echo "target branch: $target_branch"
          dev_regex="^(fix|feat|refactor|style)/.*$"

          if [[ "$branch_name" =~ $dev_regex ]]; then
            echo "Branch name matches with regex pattern."
          else
            echo "Branch name does not match with regex."
            exit 1
          fi
        shell: bash

  parse_pr_name:
    name: Parse pull request name
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Parse pr name
        uses: actions/github-script@v7
        with:
          script: |
            const pullRequestTitle = context.payload.pull_request.title;
            console.log(`Pull request title: ${pullRequestTitle}`);
            const pattern = /^(feat|fix|refactor|style): .{1,50}/;

            if (pullRequestTitle.match(pattern)) {
                console.log("Title matches conventional commit. Good job.");
            } else {
                var message = '@${{ github.event.pull_request.user.login }} Pull request title does not match conventional commit format. Please edit the PR title and the pipeline will run again.';
                github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: message
                })
                core.setFailed(message)
            }
  build:
    runs-on: self-hosted
    name: Build application

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
      # TODO github action doesn't provide x server and chrome for test
